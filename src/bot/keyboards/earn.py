from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.filters.callback_data import CallbackData

from app.database.models.task import Task, TaskType
from app.database.models.user import User
from app.bot.keyboards.main_menu import MainMenuCallback

class EarnCallback(CallbackData, prefix="earn"):
    """Callback –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞"""
    action: str
    task_type: str = "all"
    task_id: int = 0
    page: int = 1

def get_earn_menu_keyboard() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∑–∞—Ä–∞–±–æ—Ç–∫–∞"""
    builder = InlineKeyboardBuilder()
    
    # –¢–∏–ø—ã –∑–∞–¥–∞–Ω–∏–π
    builder.row(
        InlineKeyboardButton(
            text="üì∫ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª—ã",
            callback_data=EarnCallback(action="list", task_type="channel_subscription").pack()
        )
    )
    
    builder.row(
        InlineKeyboardButton(
            text="üë• –í—Å—Ç—É–ø–∏—Ç—å –≤ –≥—Ä—É–ø–ø—ã",
            callback_data=EarnCallback(action="list", task_type="group_join").pack()
        )
    )
    
    builder.row(
        InlineKeyboardButton(
            text="üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å—Ç–æ–≤",
            callback_data=EarnCallback(action="list", task_type="post_view").pack()
        )
    )
    
    builder.row(
        InlineKeyboardButton(
            text="üëç –ü–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏–∏",
            callback_data=EarnCallback(action="list", task_type="post_reaction").pack()
        )
    )
    
    builder.row(
        InlineKeyboardButton(
            text="ü§ñ –ü–µ—Ä–µ–π—Ç–∏ –≤ –±–æ—Ç–æ–≤",
            callback_data=EarnCallback(action="list", task_type="bot_interaction").pack()
        )
    )
    
    # –í—Å–µ –∑–∞–¥–∞–Ω–∏—è
    builder.row(
        InlineKeyboardButton(
            text="üéØ –í—Å–µ –∑–∞–¥–∞–Ω–∏—è",
            callback_data=EarnCallback(action="list", task_type="all").pack()
        )
    )
    
    # –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
    builder.row(
        InlineKeyboardButton(
            text="üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            callback_data=MainMenuCallback(action="main_menu").pack()
        )
    )
    
    return builder.as_markup()

def get_task_list_keyboard(
    tasks: list[Task], 
    task_type: str = "all", 
    page: int = 1,
    has_next: bool = False
) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞–Ω–∏–π"""
    builder = InlineKeyboardBuilder()
    
    # –ó–∞–¥–∞–Ω–∏—è (–ø–æ 5 –≤ —Ä—è–¥ –º–∞–∫—Å–∏–º—É–º)
    for task in tasks:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
        reward_text = f"{task.reward_amount:,.0f} GRAM"
        remaining = task.remaining_executions
        
        button_text = f"üí∞ {reward_text} | {remaining} —à—Ç."
        
        builder.row(
            InlineKeyboardButton(
                text=button_text,
                callback_data=EarnCallback(action="view", task_id=task.id).pack()
            )
        )
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏—è
    nav_buttons = []
    
    if page > 1:
        nav_buttons.append(
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                callback_data=EarnCallback(action="list", task_type=task_type, page=page-1).pack()
            )
        )
    
    if has_next:
        nav_buttons.append(
            InlineKeyboardButton(
                text="‚û°Ô∏è –í–ø–µ—Ä–µ–¥",
                callback_data=EarnCallback(action="list", task_type=task_type, page=page+1).pack()
            )
        )
    
    if nav_buttons:
        builder.row(*nav_buttons)
    
    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    builder.row(
        InlineKeyboardButton(
            text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
            callback_data=EarnCallback(action="list", task_type=task_type, page=page).pack()
        ),
        InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ö —Ç–∏–ø–∞–º –∑–∞–¥–∞–Ω–∏–π",
            callback_data=EarnCallback(action="menu").pack()
        )
    )
    
    return builder.as_markup()

def get_task_view_keyboard(task: Task, user: User) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–¥–∞–Ω–∏—è"""
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    if task.is_active and task.can_be_executed_by_user(user.level):
        if task.type in [TaskType.BOT_INTERACTION]:
            button_text = "ü§ñ –ü–µ—Ä–µ–π—Ç–∏ –∫ –±–æ—Ç—É"
        elif task.type == TaskType.CHANNEL_SUBSCRIPTION:
            button_text = "üì∫ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è"
        elif task.type == TaskType.GROUP_JOIN:
            button_text = "üë• –í—Å—Ç—É–ø–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É"
        elif task.type == TaskType.POST_VIEW:
            button_text = "üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å—Ç"
        elif task.type == TaskType.POST_REACTION:
            button_text = "üëç –ü–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é"
        else:
            button_text = "‚úÖ –í—ã–ø–æ–ª–Ω–∏—Ç—å"
        
        builder.row(
            InlineKeyboardButton(
                text=button_text,
                callback_data=EarnCallback(action="execute", task_id=task.id).pack()
            )
        )
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–¥–∞–Ω–∏–∏
    builder.row(
        InlineKeyboardButton(
            text="‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏",
            callback_data=EarnCallback(action="info", task_id=task.id).pack()
        )
    )
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏—è
    builder.row(
        InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ö —Å–ø–∏—Å–∫—É –∑–∞–¥–∞–Ω–∏–π",
            callback_data=EarnCallback(action="list", task_type=task.type).pack()
        )
    )
    
    return builder.as_markup()

def get_task_execution_keyboard(task: Task) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è"""
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ (–¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞–Ω–∏–π)
    if task.auto_check and not task.manual_review_required:
        builder.row(
            InlineKeyboardButton(
                text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ",
                callback_data=EarnCallback(action="check", task_id=task.id).pack()
            )
        )
    
    # –û—Ç–º–µ–Ω–∞
    builder.row(
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data=EarnCallback(action="view", task_id=task.id).pack()
        )
    )
    
    return builder.as_markup()