from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.filters import Command

from app.database.models.user import User
from app.services.user_service import UserService
from app.bot.keyboards.referral import ReferralCallback, get_referral_keyboard, get_referral_link_keyboard
from app.bot.keyboards.main_menu import get_back_to_menu_keyboard
from app.bot.utils.messages import get_referral_text
from app.config.settings import settings

router = Router()

@router.message(Command("referral"))
async def cmd_referral(message: Message, user: User):
    """–ö–æ–º–∞–Ω–¥–∞ /referral"""
    text = get_referral_text(user)
    
    await message.answer(
        text,
        reply_markup=get_referral_keyboard()
    )

@router.callback_query(ReferralCallback.filter(F.action == "menu"))
async def show_referral_menu(callback: CallbackQuery, user: User):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    text = get_referral_text(user)
    
    await callback.message.edit_text(
        text,
        reply_markup=get_referral_keyboard()
    )
    await callback.answer()

@router.callback_query(ReferralCallback.filter(F.action == "link"))
async def show_referral_link(callback: CallbackQuery, user: User):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É"""
    referral_link = f"https://t.me/{settings.BOT_USERNAME}?start={user.telegram_id}"
    
    text = f"""üîó <b>–í–ê–®–ê –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–°–´–õ–ö–ê</b>

<code>{referral_link}</code>

üí∞ <b>–ó–ê –ö–ê–ñ–î–û–ì–û –†–ï–§–ï–†–ê–õ–ê:</b>
‚îú –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {user.get_level_config()['referral_bonus']:,.0f} GRAM
‚îú –û—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: 5% –æ—Ç –∑–∞—Ä–∞–±–æ—Ç–∫–∞
‚îî –û—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π: 10% –æ—Ç –¥–µ–ø–æ–∑–∏—Ç–æ–≤

üì§ <b>–ö–ê–ö –ü–†–ò–ì–õ–ê–°–ò–¢–¨:</b>
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –¥—Ä—É–∑—å—è–º
‚Ä¢ –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö  
‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –≤ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"

üéØ <b>–°–û–í–ï–¢–´:</b>
‚Ä¢ –û–±—ä—è—Å–Ω–∏—Ç–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –±–æ—Ç–∞
‚Ä¢ –ü–æ–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –ª–µ–≥–∫–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å
‚Ä¢ –ü–æ–º–æ–≥–∏—Ç–µ —Å –ø–µ—Ä–≤—ã–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏"""
    
    await callback.message.edit_text(
        text,
        reply_markup=get_referral_link_keyboard(user.telegram_id)
    )
    await callback.answer()

@router.callback_query(ReferralCallback.filter(F.action == "list"))
async def show_referral_list(
    callback: CallbackQuery, 
    callback_data: ReferralCallback,
    user: User, 
    user_service: UserService
):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"""
    page = callback_data.page
    limit = 10
    offset = (page - 1) * limit
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    referrals = await user_service.get_user_referrals(
        user.telegram_id, 
        limit=limit + 1
    )
    
    has_next = len(referrals) > limit
    if has_next:
        referrals = referrals[:limit]
    
    if not referrals:
        text = f"""üë• <b>–ú–û–ò –†–ï–§–ï–†–ê–õ–´</b>

üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤.

üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:
<code>https://t.me/{settings.BOT_USERNAME}?start={user.telegram_id}</code>

üí∞ –ó–∞ –∫–∞–∂–¥–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞: {user.get_level_config()['referral_bonus']:,.0f} GRAM

üí° <b>–ö–∞–∫ –ø—Ä–∏–≤–ª–µ—á—å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:</b>
‚Ä¢ –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–∑—å—è–º–∏
‚Ä¢ –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –±–æ—Ç–∞
‚Ä¢ –û–ø—É–±–ª–∏–∫—É–π—Ç–µ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö"""
    else:
        text = f"""üë• <b>–ú–û–ò –†–ï–§–ï–†–ê–õ–´</b>

üìä –í—Å–µ–≥–æ: {user.total_referrals} | Premium: {user.premium_referrals}
üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {user.referral_earnings:,.0f} GRAM

üë§ <b>–°–ü–ò–°–û–ö –†–ï–§–ï–†–ê–õ–û–í</b> (—Å—Ç—Ä. {page}):"""
        
        for i, referral in enumerate(referrals, 1):
            level_emoji = {
                "bronze": "ü•â", "silver": "ü•à", 
                "gold": "ü•á", "premium": "üíé"
            }.get(referral.level, "‚ùì")
            
            date = referral.created_at.strftime('%d.%m.%Y')
            username = referral.username or f"ID{referral.telegram_id}"
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
            tasks_done = referral.tasks_completed
            balance = referral.balance
            
            text += f"\n\n{i}. {level_emoji} @{username}"
            text += f"\n‚îú –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {date}"
            text += f"\n‚îú –ó–∞–¥–∞–Ω–∏–π: {tasks_done}"
            text += f"\n‚îî –ë–∞–ª–∞–Ω—Å: {balance:,.0f} GRAM"
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    from aiogram.utils.keyboard import InlineKeyboardBuilder
    from aiogram.types import InlineKeyboardButton
    
    builder = InlineKeyboardBuilder()
    
    nav_buttons = []
    if page > 1:
        nav_buttons.append(
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                callback_data=ReferralCallback(action="list", page=page-1).pack()
            )
        )
    
    if has_next:
        nav_buttons.append(
            InlineKeyboardButton(
                text="‚û°Ô∏è –í–ø–µ—Ä–µ–¥",
                callback_data=ReferralCallback(action="list", page=page+1).pack()
            )
        )
    
    if nav_buttons:
        builder.row(*nav_buttons)
    
    builder.row(
        InlineKeyboardButton(
            text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
            callback_data=ReferralCallback(action="list", page=page).pack()
        )
    )
    
    builder.row(
        InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            callback_data=ReferralCallback(action="menu").pack()
        )
    )
    
    await callback.message.edit_text(text, reply_markup=builder.as_markup())
    await callback.answer()

@router.callback_query(ReferralCallback.filter(F.action == "earnings"))
async def show_referral_earnings(callback: CallbackQuery, user: User, user_service: UserService):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Ö–æ–¥—ã —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"""
    # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = await user_service.get_user_stats(user.telegram_id)
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ä–µ–¥–Ω—é—é –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å
    avg_earning = 0
    if user.total_referrals > 0:
        avg_earning = user.referral_earnings / user.total_referrals
    
    # –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –≤ –º–µ—Å—è—Ü (–ø—Ä–∏–º–µ—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞)
    potential_monthly = user.total_referrals * 100  # –£—Å–ª–æ–≤–Ω–æ 100 GRAM –≤ –º–µ—Å—è—Ü —Å —Ä–µ—Ñ–µ—Ä–∞–ª–∞
    
    text = f"""üí∞ <b>–î–û–•–û–î–´ –° –†–ï–§–ï–†–ê–õ–û–í</b>

üìä <b>–û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:</b>
‚îú –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {user.total_referrals}
‚îú Premium —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {user.premium_referrals}
‚îú –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –≤—Å–µ–≥–æ: {user.referral_earnings:,.0f} GRAM
‚îî –°—Ä–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥ —Å —Ä–µ—Ñ–µ—Ä–∞–ª–∞: {avg_earning:,.0f} GRAM

üíµ <b>–ò–°–¢–û–ß–ù–ò–ö–ò –î–û–•–û–î–ê:</b>
‚îú –ó–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {user.get_level_config()['referral_bonus']:,.0f} GRAM –∑–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
‚îú –û—Ç –∑–∞–¥–∞–Ω–∏–π: 5% –æ—Ç –∑–∞—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
‚îú –û—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π: 10% –æ—Ç –¥–µ–ø–æ–∑–∏—Ç–æ–≤ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
‚îî –ë–æ–Ω—É—Å—ã: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã

üìà <b>–ü–û–¢–ï–ù–¶–ò–ê–õ:</b>
‚îú –û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω—ã–π –¥–æ—Ö–æ–¥ –≤ –º–µ—Å—è—Ü: ~{potential_monthly:,.0f} GRAM
‚îú –ü—Ä–∏ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–∏ 10 –∞–∫—Ç–∏–≤–Ω—ã—Ö: ~{potential_monthly * 10:,.0f} GRAM
‚îî –ü—Ä–∏ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–∏ 100 –∞–∫—Ç–∏–≤–Ω—ã—Ö: ~{potential_monthly * 100:,.0f} GRAM

üéØ <b>–ö–ê–ö –£–í–ï–õ–ò–ß–ò–¢–¨ –î–û–•–û–î–´:</b>
‚Ä¢ –ü—Ä–∏–≤–ª–µ–∫–∞–π—Ç–µ –±–æ–ª—å—à–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
‚Ä¢ –ü–æ–º–æ–≥–∞–π—Ç–µ –∏–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –±–æ—Ç–æ–º
‚Ä¢ –ú–æ—Ç–∏–≤–∏—Ä—É–π—Ç–µ –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ
‚Ä¢ –ü–æ–æ—â—Ä—è–π—Ç–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞"""
    
    await callback.message.edit_text(
        text,
        reply_markup=get_back_to_menu_keyboard()
    )
    await callback.answer()

@router.callback_query(ReferralCallback.filter(F.action == "stats"))
async def show_referral_stats(callback: CallbackQuery, user: User, user_service: UserService):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"""
    referrals = await user_service.get_user_referrals(user.telegram_id, limit=1000)
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    stats_by_level = {"bronze": 0, "silver": 0, "gold": 0, "premium": 0}
    active_referrals = 0
    total_referral_balance = 0
    total_referral_tasks = 0
    
    for ref in referrals:
        stats_by_level[ref.level] += 1
        total_referral_balance += ref.balance
        total_referral_tasks += ref.tasks_completed
        
        # –°—á–∏—Ç–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–º–∏ —Ç–µ—Ö, –∫—Ç–æ –±—ã–ª –æ–Ω–ª–∞–π–Ω –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
        if ref.last_activity:
            from datetime import datetime, timedelta
            week_ago = datetime.utcnow() - timedelta(days=7)
            if ref.last_activity > week_ago:
                active_referrals += 1
    
    # –ö–æ–Ω–≤–µ—Ä—Å–∏—è –≤ Premium
    premium_conversion = 0
    if user.total_referrals > 0:
        premium_conversion = (user.premium_referrals / user.total_referrals) * 100
    
    text = f"""üìä <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê –†–ï–§–ï–†–ê–õ–û–í</b>

üë• <b>–†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ü–û –£–†–û–í–ù–Ø–ú:</b>
‚îú ü•â Bronze: {stats_by_level['bronze']}
‚îú ü•à Silver: {stats_by_level['silver']}
‚îú ü•á Gold: {stats_by_level['gold']}
‚îî üíé Premium: {stats_by_level['premium']}

üìà <b>–ê–ö–¢–ò–í–ù–û–°–¢–¨:</b>
‚îú –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {user.total_referrals}
‚îú –ê–∫—Ç–∏–≤–Ω—ã—Ö (–Ω–µ–¥–µ–ª—è): {active_referrals}
‚îú –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {(active_referrals/user.total_referrals*100 if user.total_referrals > 0 else 0):.1f}%
‚îî –ö–æ–Ω–≤–µ—Ä—Å–∏—è –≤ Premium: {premium_conversion:.1f}%

üí∞ <b>–≠–ö–û–ù–û–ú–ò–ß–ï–°–ö–ò–ï –ü–û–ö–ê–ó–ê–¢–ï–õ–ò:</b>
‚îú –û–±—â–∏–π –±–∞–ª–∞–Ω—Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {total_referral_balance:,.0f} GRAM
‚îú –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π: {total_referral_tasks}
‚îú –í–∞—à–∏ –¥–æ—Ö–æ–¥—ã: {user.referral_earnings:,.0f} GRAM
‚îî ROI —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã: –≤—ã—Å–æ–∫–∏–π

üéØ <b>–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:</b>"""
    
    if user.total_referrals < 10:
        text += "\n‚Ä¢ –ü—Ä–∏–≤–ª–µ–∫–∞–π—Ç–µ –±–æ–ª—å—à–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"
    if premium_conversion < 10:
        text += "\n‚Ä¢ –ú–æ—Ç–∏–≤–∏—Ä—É–π—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –∫ Premium"
    if active_referrals < user.total_referrals * 0.5:
        text += "\n‚Ä¢ –ü–æ–≤—ã—à–∞–π—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"
    
    text += "\n‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±—â–∞–π—Ç–µ—Å—å —Å —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º–∏"
    text += "\n‚Ä¢ –ü–æ–º–æ–≥–∞–π—Ç–µ —Å –ø–µ—Ä–≤—ã–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏"
    
    await callback.message.edit_text(
        text,
        reply_markup=get_back_to_menu_keyboard()
    )
    await callback.answer()

